name: Python Tests with UI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

      env:
        SELENIUM_REMOTE_URL: http://localhost:4444/wd/hub

    - name: Set up webdriver-manager
      shell: pwsh
      run: |
        python -m pip install --upgrade pip
        pip install selenium webdriver-manager

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Install Python dependencies
      shell: pwsh
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Allure
      shell: pwsh
      run: |
        $allureVersion = "2.13.8"
        $allureUrl = "https://github.com/allure-framework/allure2/releases/download/$allureVersion/allure-$allureVersion.zip"
        $allureZip = "allure-$allureVersion.zip"
        $allureDir = "allure-$allureVersion"
    
        Invoke-WebRequest -Uri $allureUrl -OutFile $allureZip
        Expand-Archive -Path $allureZip -DestinationPath .
    
        $allureBin = (Join-Path (Resolve-Path $allureDir).Path "bin")
        # 将 PATH 更新，便于当前与后续步骤使用
        $env:PATH = "$env:PATH;$allureBin"
    
        Write-Host "Allure bin: $allureBin"
        Write-Host "PATH: $env:PATH"
        # 也可直接输出 bin 目录文件，便于调试
        Get-ChildItem -Path $allureBin

    - name: Run tests with smart handling
      id: smart_tests
      shell: pwsh
      run: |
        # 设置错误处理
        $ErrorActionPreference = "Continue"

        # 运行测试
        pytest -v -x test_cases/ui_tests/test_master_data/test_material_management.py::TestMaterialManagement::test_add_material --alluredir=allure-results
        $exitCode = $LASTEXITCODE

        # 输出退出码
        "exit_code=$exitCode" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

        # 分析退出码
        switch ($exitCode) {
            0 { 
                "result=success" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
                Write-Host "✅ 所有测试通过"
                $finalExitCode = 0
            }
            1 { 
                "result=assertion_failure" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
                Write-Host "⚠️ 断言失败，但继续执行后续步骤"
                $finalExitCode = 0
            }
            default { 
                "result=other_error" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
                Write-Host "❌ 其他错误，停止执行后续步骤"
                $finalExitCode = $exitCode
            }
        }
        exit $finalExitCode

    - name: Generate Allure report
      if: always() && (steps.smart_tests.outputs.result == 'success' || steps.smart_tests.outputs.result == 'assertion_failure')
      shell: pwsh
      run: |
        $allureBin = (Join-Path (Resolve-Path "allure-$allureVersion").Path "bin")
        $allureExeCandidates = @(
          Join-Path $allureBin "allure.bat",
          Join-Path $allureBin "allure.cmd",
          Join-Path $allureBin "allure.exe"
        )
    
        $allureExe = $null
        foreach ($c in $allureExeCandidates) {
          if (Test-Path $c) { $allureExe = $c; break }
        }
    
        if (-not $allureExe) {
          Write-Host "❌ Allure 可执行文件未找到，请检查 bin 目录内容："
          Get-ChildItem -Path $allureBin
          exit 1
        }
    
        Write-Host "Using Allure executable: $allureExe"
        & "$allureExe" generate allure-results -o allure-report --clean
    
        if (Test-Path "allure-report/index.html") {
            Write-Host "✅ Allure报告生成成功"
        } else {
            Write-Host "❌ Allure报告生成失败"
            Get-ChildItem allure-results/ -ErrorAction SilentlyContinue | ForEach-Object { Write-Host $_.Name }
            exit 1
        }

    - name: Upload artifacts
      if: always() && (steps.smart_tests.outputs.result == 'success' || steps.smart_tests.outputs.result == 'assertion_failure')
      uses: actions/upload-artifact@v4
      with:
        name: test-artifacts
        path: |
          allure-report/
          allure-results/
        retention-days: 30

    - name: Show final status
      if: always()
      shell: pwsh
      run: |
        Write-Host "=== 测试执行完成 ==="
        Write-Host "最终结果: ${{ steps.smart_tests.outputs.result }}"
        Write-Host "退出码: ${{ steps.smart_tests.outputs.exit_code }}"