name: Python Tests with UI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

      env:
        SELENIUM_REMOTE_URL: http://localhost:4444/wd/hub

    - name: Set up webdriver-manager
      shell: pwsh
      run: |
        python -m pip install --upgrade pip
        pip install selenium webdriver-manager

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Install Python dependencies
      shell: pwsh
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Allure
      id: install_allure
      shell: pwsh
      run: |
        $allureVersion = "2.35.1"
        $allureUrl = "https://github.com/allure-framework/allure2/releases/download/$allureVersion/allure-$allureVersion.zip"
        $allureZip = "allure-$allureVersion.zip"
        $allureDir = "allure-$allureVersion"
        # 下载并解压
        Invoke-WebRequest -Uri $allureUrl -OutFile $allureZip
        Expand-Archive -Path $allureZip -DestinationPath .
        # 获取绝对路径
        $allurePath = (Resolve-Path $allureDir).Path
        $allureBin = Join-Path $allurePath "bin"
        # 添加到PATH
        "::add-path::$allureBin" | Out-File -FilePath $env:GITHUB_PATH -Append
        # 输出路径供后续步骤使用
        "allure_bin=$allureBin" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
        "allure_version=$allureVersion" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

    - name: Run tests with smart handling
      shell: pwsh
      run: |
        # 运行ui测试
        pytest -v -x test_cases/ui_tests/test_master_data/test_material_management.py::TestMaterialManagement::test_add_material --alluredir=allure-results --clean-alluredir
        $exitCode = $LASTEXITCODE

    - name: Generate Allure report
      shell: pwsh
      run: |
        # 使用之前步骤输出的 allure_bin 路径
        $allureBin = "${{ steps.install_allure.outputs.allure_bin }}"
        $allureCmd = Join-Path $allureBin "allure.bat"  # Windows 使用 .bat
        
        # 生成报告
        & $allureCmd generate allure-results -o allure-report --clean
        
        # 验证报告生成
        if (Test-Path "allure-report/index.html") {
            Write-Host "✅ Allure报告生成成功"
        }

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: test-artifacts
        path: |
          allure-report/
          allure-results/
        retention-days: 30