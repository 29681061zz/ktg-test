name: Python Tests with UI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: windows-latest

    services:
      selenium:
        image: selenium/standalone-edge:latest
        options: --shm-size=2g
        ports:
          - 4444:4444

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Allure
      run: |
        # 下载并安装 Allure
        $allureVersion = "2.13.8"
        $allureUrl = "https://github.com/allure-framework/allure2/releases/download/$allureVersion/allure-$allureVersion.zip"
        $allureZip = "allure-$allureVersion.zip"
        $allureDir = "allure-$allureVersion"
        
        # 下载 Allure
        Invoke-WebRequest -Uri $allureUrl -OutFile $allureZip
        
        # 解压到当前目录
        Expand-Archive -Path $allureZip -DestinationPath . -Force
        
        # 将 Allure 添加到系统 PATH
        $allurePath = (Resolve-Path $allureDir).Path + "\bin"
        echo "##vso[task.prependpath]$allurePath"

    - name: Run tests with smart handling
      id: smart_tests
      run: |
        # 设置错误处理
        $ErrorActionPreference = "Continue"
        
        # 运行测试
        pytest -v -x test_cases/ui_tests/test_master_data/test_material_management.py::TestMaterialManagement::test_add_material --alluredir=allure-results
        $exitCode = $LASTEXITCODE
        
        # 输出退出码
        echo "exit_code=$exitCode" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
        
        # 分析退出码
        switch ($exitCode) {
            0 { 
                echo "result=success" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
                echo "✅ 所有测试通过"
                $finalExitCode = 0
            }
            1 { 
                echo "result=assertion_failure" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
                echo "⚠️ 断言失败，但继续执行后续步骤"
                $finalExitCode = 0
            }
            default { 
                echo "result=other_error" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
                echo "❌ 其他错误，停止执行后续步骤"
                $finalExitCode = $exitCode
            }
        }
        
        exit $finalExitCode
      env:
        SELENIUM_REMOTE_URL: http://localhost:4444/wd/hub
        BASE_URL: ${{ secrets.BASE_URL }}
        TEST_USERNAME: ${{ secrets.TEST_USERNAME }}
        TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}

    - name: Generate Allure report
      if: always() && (steps.smart_tests.outputs.result == 'success' || steps.smart_tests.outputs.result == 'assertion_failure')
      run: |
        echo "测试结果: ${{ steps.smart_tests.outputs.result }}"
        echo "生成Allure报告中..."
        
        # 生成 Allure 报告
        allure generate allure-results -o allure-report --clean
        
        # 检查报告是否生成成功
        if (Test-Path "allure-report/index.html") {
            echo "✅ Allure报告生成成功"
        } else {
            echo "❌ Allure报告生成失败"
            Get-ChildItem allure-results/ -ErrorAction SilentlyContinue | ForEach-Object { echo $_.Name }
        }

    - name: Upload artifacts
      if: always() && (steps.smart_tests.outputs.result == 'success' || steps.smart_tests.outputs.result == 'assertion_failure')
      uses: actions/upload-artifact@v4
      with:
        name: test-artifacts
        path: |
          allure-report/
          allure-results/
        retention-days: 30

    - name: Show final status
      if: always()
      run: |
        echo "=== 测试执行完成 ==="
        echo "最终结果: ${{ steps.smart_tests.outputs.result }}"
        echo "退出码: ${{ steps.smart_tests.outputs.exit_code }}"